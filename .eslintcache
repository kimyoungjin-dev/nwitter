[{"/Users/kimyoungjing/Desktop/nwitter/src/index.js":"1","/Users/kimyoungjing/Desktop/nwitter/src/components/App.js":"2","/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js":"3","/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js":"4","/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js":"5","/Users/kimyoungjing/Desktop/nwitter/src/fbase.js":"6","/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js":"7","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js":"8","/Users/kimyoungjing/Desktop/nwitter/src/components/NweetFactory.js":"9","/Users/kimyoungjing/Desktop/nwitter/src/components/AuthForm.js":"10","/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js":"11"},{"size":263,"mtime":1609763741103,"results":"12","hashOfConfig":"13"},{"size":1040,"mtime":1609763741102,"results":"14","hashOfConfig":"13"},{"size":1124,"mtime":1609763741103,"results":"15","hashOfConfig":"13"},{"size":1340,"mtime":1609764286219,"results":"16","hashOfConfig":"13"},{"size":851,"mtime":1609765509110,"results":"17","hashOfConfig":"13"},{"size":708,"mtime":1609763741103,"results":"18","hashOfConfig":"13"},{"size":1540,"mtime":1609766110382,"results":"19","hashOfConfig":"13"},{"size":2195,"mtime":1609765679680,"results":"20","hashOfConfig":"13"},{"size":2903,"mtime":1609766830972,"results":"21","hashOfConfig":"13"},{"size":1874,"mtime":1609763741102,"results":"22","hashOfConfig":"13"},{"size":1448,"mtime":1609766489075,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1b97civ",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},"/Users/kimyoungjing/Desktop/nwitter/src/index.js",["52"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"./fbase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["53","54"],"/Users/kimyoungjing/Desktop/nwitter/src/components/App.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/fbase.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js",["55","56"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginTop: \"50px\",\n      }}\n    >\n      <li>\n        <Link\n          to=\"/\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 10,\n            border: \"1px solid white\",\n            borderRadius: \"10px\",\n            padding: 5,\n            marginLeft: 0,\n          }}\n        >\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\n          <span>Home</span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            fontSize: 8,\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 10,\n            color: \"black\",\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"3x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}` : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js",["57"],"import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form className=\"container nweetEdit\" onSubmit={onSubmit}>\n            <input\n              className=\"formInput\"\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              autoFocus\n              required\n            />\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <span className=\"formBtn cancelBtn\" onClick={toggleEditing}>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/NweetFactory.js",["58"],"import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\n      <span className=\"factoryFormName\">\n        {userObj.displayName}님 오늘 하루는 어떠셨나요?\n      </span>\n      <div className=\"factoryInput__container\">\n        <input //nweet입력칸\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"트윗을 작성해보세요\"\n          maxLength={120}\n        />\n        <input className=\"factoryInput__arrow\" type=\"submit\" value=\"&rarr;\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input //+버튼을 누르면 나오는 사진 첨부컨텐츠\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && ( //미리 보기 사진\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/AuthForm.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js",["59"],"import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <span className=\"profileName\">\n          {userObj.displayName}님 오늘도 행복하신가요?\n        </span>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value=\"닉네임변경\"\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n",{"ruleId":"60","severity":1,"message":"61","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":16},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":29,"column":13,"nodeType":"70","messageId":"71","endLine":29,"endColumn":23},{"ruleId":"68","severity":1,"message":"72","line":45,"column":13,"nodeType":"70","messageId":"71","endLine":45,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":52,"column":13,"nodeType":"75","endLine":52,"endColumn":76},{"ruleId":"73","severity":1,"message":"74","line":83,"column":11,"nodeType":"75","endLine":83,"endColumn":75},{"ruleId":"76","severity":1,"message":"77","line":4,"column":1,"nodeType":"78","endLine":54,"endColumn":3},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","Duplicate key 'fontSize'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]