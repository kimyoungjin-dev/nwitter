[{"/Users/kimyoungjing/Desktop/nwitter/src/index.js":"1","/Users/kimyoungjing/Desktop/nwitter/src/components/App.js":"2","/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js":"3","/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js":"4","/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js":"5","/Users/kimyoungjing/Desktop/nwitter/src/fbase.js":"6","/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js":"7","/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js":"8","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js":"9","/Users/kimyoungjing/Desktop/nwitter/src/components/NweetFactory.js":"10"},{"size":240,"mtime":1609007100451,"results":"11","hashOfConfig":"12"},{"size":1063,"mtime":1609164307715,"results":"13","hashOfConfig":"12"},{"size":881,"mtime":1609163341789,"results":"14","hashOfConfig":"12"},{"size":2335,"mtime":1609058889512,"results":"15","hashOfConfig":"12"},{"size":820,"mtime":1609166031989,"results":"16","hashOfConfig":"12"},{"size":708,"mtime":1609146762009,"results":"17","hashOfConfig":"12"},{"size":320,"mtime":1609159804419,"results":"18","hashOfConfig":"12"},{"size":1060,"mtime":1609163470575,"results":"19","hashOfConfig":"12"},{"size":1736,"mtime":1609157114145,"results":"20","hashOfConfig":"12"},{"size":1926,"mtime":1609165873433,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1b97civ",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/kimyoungjing/Desktop/nwitter/src/index.js",["48"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"./fbase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["49","50"],"/Users/kimyoungjing/Desktop/nwitter/src/components/App.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js",["51"],"import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/kimyoungjing/Desktop/nwitter/src/fbase.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js",["52"],"import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js",["53"],"import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/NweetFactory.js",["54"],"import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={nweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n",{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":2,"column":21,"nodeType":"57","messageId":"58","endLine":2,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":43,"endColumn":3},{"ruleId":"67","severity":1,"message":"68","line":46,"column":13,"nodeType":"69","endLine":46,"endColumn":76},{"ruleId":"67","severity":1,"message":"68","line":62,"column":11,"nodeType":"69","endLine":62,"endColumn":62},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'storageService' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]