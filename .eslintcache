[{"/Users/kimyoungjing/Desktop/nwitter/src/index.js":"1","/Users/kimyoungjing/Desktop/nwitter/src/components/App.js":"2","/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js":"3","/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js":"4","/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js":"5","/Users/kimyoungjing/Desktop/nwitter/src/fbase.js":"6","/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js":"7","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js":"8","/Users/kimyoungjing/Desktop/nwitter/src/components/NweetFactory.js":"9","/Users/kimyoungjing/Desktop/nwitter/src/components/AuthForm.js":"10","/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js":"11"},{"size":325,"mtime":1610184953625,"results":"12","hashOfConfig":"13"},{"size":1496,"mtime":1610193284698,"results":"14","hashOfConfig":"13"},{"size":881,"mtime":1610184953625,"results":"15","hashOfConfig":"13"},{"size":2287,"mtime":1610184953626,"results":"16","hashOfConfig":"13"},{"size":975,"mtime":1610184953626,"results":"17","hashOfConfig":"13"},{"size":708,"mtime":1610184953625,"results":"18","hashOfConfig":"13"},{"size":825,"mtime":1610191521180,"results":"19","hashOfConfig":"13"},{"size":3310,"mtime":1610184953625,"results":"20","hashOfConfig":"13"},{"size":3176,"mtime":1610184953625,"results":"21","hashOfConfig":"13"},{"size":2182,"mtime":1610184953625,"results":"22","hashOfConfig":"13"},{"size":4955,"mtime":1610192784166,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b97civ",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/kimyoungjing/Desktop/nwitter/src/index.js",[],["51","52"],"/Users/kimyoungjing/Desktop/nwitter/src/components/App.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/fbase.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js",["53"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\n//css => navigation.css\nconst Navigation = ({ userObj }) => (\n  <nav className=\"navigation-nav\">\n    <ul className=\"navigation-ul\">\n      <li className=\"navigation-li\">\n        <Link to=\"/\">\n          <FontAwesomeIcon\n            id=\"nav-fatwitter-icon\"\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n          />\n        </Link>\n      </li>\n      <span>{userObj.displayName}</span>\n      <li>\n        <Link to=\"/profile\">\n          <div>\n            <img src={userObj.photoURL} />\n          </div>\n        </Link>\n      </li>\n    </ul>\n    <div className=\"no-mobile\"></div>\n  </nav>\n);\nexport default Navigation;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js",["54","55"],"import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faPencilAlt,\n  faListAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form className=\"nweetContainer nweetEdit\" onSubmit={onSubmit}>\n            <input\n              className=\"formInput\"\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              autoFocus\n              required\n            />\n          </form>\n          <div className=\"nweetEdit-updateAndCancle\">\n            <input\n              className=\"nweetEdit-update\"\n              type=\"submit\"\n              value=\"Update Nweet\"\n            />\n            <span className=\"nweetEdit-cancle\" onClick={toggleEditing}>\n              Cancel\n            </span>\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"nweetList\">\n            <span className=\"nweet-Tweet-list\">내가 작성한 트윗목록</span>\n            <i>\n              <FontAwesomeIcon icon={faListAlt} />\n            </i>\n          </div>\n\n          <div className=\"nweet-creation-screen\">\n            <div className=\"nweet-creation-screen_userAndProfile\">\n              <img\n                className=\"nweet-creation-screen_profileImg\"\n                src={nweetObj.photoURL}\n              />\n              <h4>{nweetObj.displayName}</h4>\n            </div>\n            <h2 className=\"nweet-creation-screen_email\">{nweetObj.email}</h2>\n            {isOwner && (\n              <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n            <h4 className=\"nweet-creation-screen_text\">{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && (\n              <img\n                className=\"nweet-creation-screen_attachmentURL\"\n                src={nweetObj.attachmentUrl}\n                width=\"50px\"\n                height=\"50px\"\n              />\n            )}\n          </div>\n        </>\n      )}\n      <div className=\"no-mobile\">\n        <span>크기를 줄이거나 핸드폰으로 접속하세요</span>\n      </div>\n    </div>\n  );\n};\nexport default Nweet;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/NweetFactory.js",["56","57","58","59","60","61"],"import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShopware } from \"@fortawesome/free-brands-svg-icons\";\nimport { faListAlt } from \"@fortawesome/free-regular-svg-icons\";\n\nimport {\n  faPlus,\n  faTimes,\n  faHome,\n  faEnvelopeSquare,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n      photoURL: userObj.photoURL,\n      email: userObj.email,\n      displayName: userObj.displayName,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <>\n      <form className=\"factoryForm\" onSubmit={onSubmit}>\n        <div className=\"factoryInput__container\">\n          <input //nweet입력칸\n            className=\"factoryInput__input\"\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"당신의 트윗을 작성해보세요\"\n            maxLength={120}\n          />\n        </div>\n        <div className=\"nweetfactory-imgAndPhoto\">\n          <label htmlFor=\"attach-file\">\n            <span>사진추가하기</span>\n            <FontAwesomeIcon icon={faPlus} />\n          </label>\n          <input type=\"submit\" value=\"트윗\" />\n        </div>\n\n        <input //+버튼을 누르면 나오는 사진 첨부컨텐츠\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{ opacity: 0 }}\n        />\n\n        {attachment && ( //미리 보기 사진\n          <div className=\"factoryForm__attachment\">\n            <img src={attachment} style={{ backgroundImage: attachment }} />\n\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>취소</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\nexport default NweetFactory;\n","/Users/kimyoungjing/Desktop/nwitter/src/components/AuthForm.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js",["62","63","64"],"import React, { useState } from \"react\";\nimport { authService, storageService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faCamera } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faCheckSquare,\n  faTimesCircle,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nimport { Link } from \"react-router-dom\";\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [attachment, setAttachment] = useState();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n    if (userObj.photoURL !== attachment) {\n      await userObj.updateProfile({\n        photoURL: attachment,\n      });\n      refreshUser();\n      setAttachment(null);\n    }\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = async (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      const attachRef = storageService.ref().child(`${userObj.uid}`);\n      const response = await attachRef.putString(result, \"data_url\");\n      const attachmentUrl = await response.ref.getDownloadURL();\n      setAttachment(attachmentUrl);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <div className=\"container profile-container\">\n      <div className=\"profile-left\">\n        <img\n          className=\"profilePhoto\"\n          src={userObj.photoURL}\n          value={userObj.photoURL}\n        />\n        <label htmlFor=\"attach-file\">\n          <FontAwesomeIcon id=\"attach-file-icon\" icon={faCamera} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          onChange={onFileChange}\n          style={{ opacity: 0 }}\n        />\n      </div>\n      <div className=\"profile-center\">\n        {attachment && (\n          <>\n            <div className=\"profile-attachment\">\n              <img src={attachment} width=\"80px\" height=\"80px\" />\n              <div className=\"profile-checkBox\">\n                <div className=\"profileIconBox\">\n                  <form onSubmit={onSubmit}>\n                    <label htmlFor=\"attach-checkIcon\">\n                      <FontAwesomeIcon icon={faCheckSquare} />\n                    </label>\n                    <input\n                      id=\"attach-checkIcon\"\n                      type=\"submit\"\n                      value=\"변경\"\n                      style={{ opacity: 1 }}\n                    />\n                    <label htmlFor=\"attach-cancleIcon\">\n                      <FontAwesomeIcon icon={faTimesCircle} />\n                    </label>\n                    <input\n                      id=\"attach-cancleIcon\"\n                      type=\"text\"\n                      value=\"취소\"\n                      onClick={onClearAttachment}\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"profileModify\">\n        <span>팔로우</span>\n      </div>\n      <div className=\"profile-mainscreen\">\n        <form className=\"profileForm\" onSubmit={onSubmit}>\n          <input\n            className=\"profileInput\"\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            value={newDisplayName}\n          />\n          <input className=\"profileInput2\" type=\"submit\" value=\"이름변경\" />\n        </form>\n\n        <div className=\"profileChangeBox\">\n          <span className=\"\">프로필변경</span>\n          <FontAwesomeIcon icon={faPencilAlt} id=\"profileChangeBoxIcon\" />\n        </div>\n\n        <div className=\"logOutBox\">\n          <span className=\"logOut\" onClick={onLogOutClick}>\n            Log Out\n          </span>\n        </div>\n      </div>\n\n      <div className=\"profile-centerTileBox\">\n        <div className=\"profile-centerTile\">\n          <span>트윗</span>\n          <span>트윗과 답글</span>\n          <span>미디어</span>\n          <span>마음에 들어요</span>\n        </div>\n      </div>\n      <div className=\"profile-bottomTitle\">여기에 내 트윗이 표시됩니다.</div>\n      <span className=\"profile-mytweet\">\n        <Link to=\"/\">첫 트윗 올리기</Link>\n      </span>\n\n      <div className=\"no-mobile\">\n        <span>크기를 줄이거나 핸드폰으로 접속하세요</span>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":23,"column":13,"nodeType":"71","endLine":23,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":68,"column":15,"nodeType":"71","endLine":71,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":87,"column":15,"nodeType":"71","endLine":92,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":19},{"ruleId":"72","severity":1,"message":"77","line":11,"column":3,"nodeType":"74","messageId":"75","endLine":11,"endColumn":9},{"ruleId":"72","severity":1,"message":"78","line":12,"column":3,"nodeType":"74","messageId":"75","endLine":12,"endColumn":19},{"ruleId":"72","severity":1,"message":"79","line":13,"column":3,"nodeType":"74","messageId":"75","endLine":13,"endColumn":9},{"ruleId":"69","severity":1,"message":"70","line":98,"column":13,"nodeType":"71","endLine":98,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":12,"column":1,"nodeType":"82","endLine":161,"endColumn":3},{"ruleId":"69","severity":1,"message":"70","line":68,"column":9,"nodeType":"71","endLine":72,"endColumn":11},{"ruleId":"69","severity":1,"message":"70","line":87,"column":15,"nodeType":"71","endLine":87,"endColumn":66},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'faShopware' is defined but never used.","Identifier","unusedVar","'faListAlt' is defined but never used.","'faHome' is defined but never used.","'faEnvelopeSquare' is defined but never used.","'faUser' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]