[{"/Users/kimyoungjing/Desktop/nwitter/src/index.js":"1","/Users/kimyoungjing/Desktop/nwitter/src/components/App.js":"2","/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js":"3","/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js":"4","/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js":"5","/Users/kimyoungjing/Desktop/nwitter/src/fbase.js":"6","/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js":"7","/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js":"8","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js":"9"},{"size":240,"mtime":1609007100451,"results":"10","hashOfConfig":"11"},{"size":650,"mtime":1609159417895,"results":"12","hashOfConfig":"11"},{"size":842,"mtime":1609159576806,"results":"13","hashOfConfig":"11"},{"size":2335,"mtime":1609058889512,"results":"14","hashOfConfig":"11"},{"size":2503,"mtime":1609158768522,"results":"15","hashOfConfig":"11"},{"size":708,"mtime":1609146762009,"results":"16","hashOfConfig":"11"},{"size":320,"mtime":1609159659998,"results":"17","hashOfConfig":"11"},{"size":675,"mtime":1609157225083,"results":"18","hashOfConfig":"11"},{"size":1736,"mtime":1609157114145,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1b97civ",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"/Users/kimyoungjing/Desktop/nwitter/src/index.js",["44"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport firebase from \"./fbase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["45","46"],"/Users/kimyoungjing/Desktop/nwitter/src/components/App.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Router.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Auth.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Home.js",["47"],"import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nconst Home = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/kimyoungjing/Desktop/nwitter/src/fbase.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/components/Navigation.js",[],"/Users/kimyoungjing/Desktop/nwitter/src/routes/Profile.js",["48","49"],"import { authService, dbService } from \"fbase\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  return (\n    <>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n","/Users/kimyoungjing/Desktop/nwitter/src/components/Nweet.js",["50"],"import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n",["51","52"],{"ruleId":"53","severity":1,"message":"54","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":16},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":73,"column":13,"nodeType":"63","endLine":73,"endColumn":64},{"ruleId":"64","severity":1,"message":"65","line":5,"column":1,"nodeType":"66","endLine":27,"endColumn":3},{"ruleId":"67","severity":1,"message":"68","line":21,"column":6,"nodeType":"69","endLine":21,"endColumn":8,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"62","line":46,"column":13,"nodeType":"63","endLine":46,"endColumn":76},{"ruleId":"57","replacedBy":"71"},{"ruleId":"59","replacedBy":"72"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyNweets'. Either include it or remove the dependency array.","ArrayExpression",["75"],["73"],["74"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [getMyNweets]",{"range":"78","text":"79"},[581,583],"[getMyNweets]"]