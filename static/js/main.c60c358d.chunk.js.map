{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","className-","icon","faCheckSquare","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","to","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","faListAlt","src","photoURL","displayName","faTrash","faPencilAlt","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","faCamera","attachRef","faTimesCircle","signOut","push","Navigation","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c60c358d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form className=\"auth-container\" onSubmit={onSubmit}>\n        <input\n          className=\"authInput\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"트위터계정 (이메일)\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          className=\"authInput\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <div className-=\"auth-save-account\">\n          <FontAwesomeIcon icon={faCheckSquare} />\n          <span className=\"auth-save-account\">트위터계정 저장</span>\n        </div>\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        <div className=\"error_message\">{error}</div>\n        <span className=\"authError\"></span>\n      </form>\n\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { Link } from \"react-router-dom\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <div className=\"auth-nav-var\">\n        <div className=\"auth-nav-var-left\">\n          <FontAwesomeIcon\n            className=\"auth-faTwitter\"\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"2x\"\n          />\n          <span>Twitter 로그인</span>\n        </div>\n\n        <div className=\"auth-nav-var-left-right\">\n          <div>\n            <Link to=\"/\">도움말</Link>\n          </div>\n          <div>\n            <Link to=\"/\">문의하기</Link>\n          </div>\n        </div>\n      </div>\n      <AuthForm />\n      <div className=\"authForm-find\">\n        <span>회원가입</span>\n        <span>트위터계정찾기 | 비밀번호 재설정</span>\n      </div>\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n\n      <div className=\"mobile-check\">\n        <Link to=\"/\">모바일에서 트위터 계정을 확인할 수 있습니다.</Link>\n      </div>\n\n      <span className=\"auth-forgetPassword\">비밀번호를 잊어버리셨나요?</span>\n      <div className=\"no-mobile\">\n        <div className=\"auth-forgetPassword\">\n          <span>크기를 줄이거나 핸드폰으로 접속하세요</span>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faPencilAlt,\n  faListAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form className=\"nweetContainer nweetEdit\" onSubmit={onSubmit}>\n            <input\n              className=\"formInput\"\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              autoFocus\n              required\n            />\n          </form>\n          <div className=\"nweetEdit-updateAndCancle\">\n            <input\n              className=\"nweetEdit-update\"\n              type=\"submit\"\n              value=\"Update Nweet\"\n            />\n            <span className=\"nweetEdit-cancle\" onClick={toggleEditing}>\n              Cancel\n            </span>\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"nweetList\">\n            <span className=\"nweet-Tweet-list\">내가 작성한 트윗목록</span>\n            <i>\n              <FontAwesomeIcon icon={faListAlt} />\n            </i>\n          </div>\n\n          <div className=\"nweet-creation-screen\">\n            <div className=\"nweet-creation-screen_userAndProfile\">\n              <img\n                className=\"nweet-creation-screen_profileImg\"\n                src={nweetObj.photoURL}\n              />\n              <h4>{nweetObj.displayName}</h4>\n            </div>\n            <h2 className=\"nweet-creation-screen_email\">{nweetObj.email}</h2>\n            {isOwner && (\n              <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            )}\n            <h4 className=\"nweet-creation-screen_text\">{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && (\n              <img\n                className=\"nweet-creation-screen_attachmentURL\"\n                src={nweetObj.attachmentUrl}\n                width=\"50px\"\n                height=\"50px\"\n              />\n            )}\n          </div>\n        </>\n      )}\n      <div className=\"no-mobile\">\n        <span>크기를 줄이거나 핸드폰으로 접속하세요</span>\n      </div>\n    </div>\n  );\n};\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShopware } from \"@fortawesome/free-brands-svg-icons\";\nimport { faListAlt } from \"@fortawesome/free-regular-svg-icons\";\n\nimport {\n  faPlus,\n  faTimes,\n  faHome,\n  faEnvelopeSquare,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n      photoURL: userObj.photoURL,\n      email: userObj.email,\n      displayName: userObj.displayName,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <>\n      <form className=\"factoryForm\" onSubmit={onSubmit}>\n        <div className=\"factoryInput__container\">\n          <input //nweet입력칸\n            className=\"factoryInput__input\"\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"당신의 트윗을 작성해보세요\"\n            maxLength={120}\n          />\n        </div>\n        <div className=\"nweetfactory-imgAndPhoto\">\n          <label htmlFor=\"attach-file\">\n            <span>사진추가하기</span>\n            <FontAwesomeIcon icon={faPlus} />\n          </label>\n          <input type=\"submit\" value=\"트윗\" />\n        </div>\n\n        <input //+버튼을 누르면 나오는 사진 첨부컨텐츠\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{ opacity: 0 }}\n        />\n\n        {attachment && ( //미리 보기 사진\n          <div className=\"factoryForm__attachment\">\n            <img src={attachment} style={{ backgroundImage: attachment }} />\n\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>취소</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n      <div className=\"no-mobile\">\n        <span>크기를 줄이거나 핸드폰으로 접속하세요</span>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService, storageService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faCamera } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faCheckSquare,\n  faTimesCircle,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nimport { Link } from \"react-router-dom\";\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [attachment, setAttachment] = useState();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n    if (userObj.photoURL !== attachment) {\n      await userObj.updateProfile({\n        photoURL: attachment,\n      });\n      refreshUser();\n      setAttachment(null);\n    }\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = async (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      const attachRef = storageService.ref().child(`${userObj.uid}`);\n      const response = await attachRef.putString(result, \"data_url\");\n      const attachmentUrl = await response.ref.getDownloadURL();\n      setAttachment(attachmentUrl);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <div className=\"container profile-container\">\n      <div className=\"profile-left\">\n        <img\n          className=\"profilePhoto\"\n          src={userObj.photoURL}\n          value={userObj.photoURL}\n        />\n        <label htmlFor=\"attach-file\">\n          <FontAwesomeIcon id=\"attach-file-icon\" icon={faCamera} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          onChange={onFileChange}\n          style={{ opacity: 0 }}\n        />\n      </div>\n      <div className=\"profile-center\">\n        {attachment && (\n          <>\n            <div className=\"profile-attachment\">\n              <img src={attachment} width=\"80px\" height=\"80px\" />\n              <div className=\"profile-checkBox\">\n                <div className=\"profileIconBox\">\n                  <form onSubmit={onSubmit}>\n                    <label htmlFor=\"attach-checkIcon\">\n                      <FontAwesomeIcon icon={faCheckSquare} />\n                    </label>\n                    <input\n                      id=\"attach-checkIcon\"\n                      type=\"submit\"\n                      value=\"변경\"\n                      style={{ opacity: 1 }}\n                    />\n                    <label htmlFor=\"attach-cancleIcon\">\n                      <FontAwesomeIcon icon={faTimesCircle} />\n                    </label>\n                    <input\n                      id=\"attach-cancleIcon\"\n                      type=\"text\"\n                      value=\"취소\"\n                      onClick={onClearAttachment}\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"profileModify\">\n        <span>팔로우</span>\n      </div>\n      <div className=\"profile-mainscreen\">\n        <form className=\"profileForm\" onSubmit={onSubmit}>\n          <input\n            className=\"profileInput\"\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            value={newDisplayName}\n          />\n          <input className=\"profileInput2\" type=\"submit\" value=\"이름변경\" />\n        </form>\n\n        <div className=\"profileChangeBox\">\n          <span className=\"\">프로필변경</span>\n          <FontAwesomeIcon icon={faPencilAlt} id=\"profileChangeBoxIcon\" />\n        </div>\n\n        <div className=\"logOutBox\">\n          <span className=\"logOut\" onClick={onLogOutClick}>\n            Log Out\n          </span>\n        </div>\n      </div>\n\n      <div className=\"profile-centerTileBox\">\n        <div className=\"profile-centerTile\">\n          <span>트윗</span>\n          <span>트윗과 답글</span>\n          <span>미디어</span>\n          <span>마음에 들어요</span>\n        </div>\n      </div>\n      <div className=\"profile-bottomTitle\">여기에 내 트윗이 표시됩니다.</div>\n      <span className=\"profile-mytweet\">\n        <Link to=\"/\">첫 트윗 올리기</Link>\n      </span>\n\n      <div className=\"no-mobile\">\n        <span>크기를 줄이거나 핸드폰으로 접속하세요</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\n//css => navigation.css\nconst Navigation = ({ userObj }) => (\n  <nav className=\"navigation-nav\">\n    <ul className=\"navigation-ul\">\n      <li className=\"navigation-li\">\n        <Link to=\"/\">\n          <FontAwesomeIcon\n            id=\"nav-fatwitter-icon\"\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n          />\n        </Link>\n      </li>\n      <span>{userObj.displayName}</span>\n      <li>\n        <Link to=\"/profile\">\n          <div>\n            <img src={userObj.photoURL} />\n          </div>\n        </Link>\n      </li>\n    </ul>\n    <div className=\"no-mobile\"></div>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n          email: user.email,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = async () => {\n    const user = await authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <div className=\"Loading_message\">\n          <FontAwesomeIcon\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n          />\n        </div>\n      )}\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\nimport \"./auth.css\";\nimport \"./navigation.css\";\nimport \"./nweet.css\";\nimport \"./profile.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}